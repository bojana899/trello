[{"C:\\Users\\hboja\\Documents\\GitHub\\trello\\trello\\src\\index.js":"1","C:\\Users\\hboja\\Documents\\GitHub\\trello\\trello\\src\\api\\TrelloApi.js":"2","C:\\Users\\hboja\\Documents\\GitHub\\trello\\trello\\src\\components\\BoardPage\\BoardPage.js":"3","C:\\Users\\hboja\\Documents\\GitHub\\trello\\trello\\src\\components\\Header\\Header.js":"4","C:\\Users\\hboja\\Documents\\GitHub\\trello\\trello\\src\\components\\Board\\Board.js":"5","C:\\Users\\hboja\\Documents\\GitHub\\trello\\trello\\src\\components\\Header\\Modal\\ModalAddNewBoard.js":"6","C:\\Users\\hboja\\Documents\\GitHub\\trello\\trello\\src\\components\\SideDrawer\\Images\\Images.js":"7","C:\\Users\\hboja\\Documents\\GitHub\\trello\\trello\\src\\components\\ReusableInputContainer\\ReusableInputContainer.js":"8","C:\\Users\\hboja\\Documents\\GitHub\\trello\\trello\\src\\components\\Card\\Card.js":"9","C:\\Users\\hboja\\Documents\\GitHub\\trello\\trello\\src\\components\\Card\\Comments\\HeaderCommentModal\\HeaderCommentModal.js":"10","C:\\Users\\hboja\\Documents\\GitHub\\trello\\trello\\src\\components\\Card\\Comments\\ReusableCommentForm\\ReusableCommentForm.js":"11","C:\\Users\\hboja\\Documents\\GitHub\\trello\\trello\\src\\components\\Home\\Home.js":"12","C:\\Users\\hboja\\Documents\\GitHub\\trello\\trello\\src\\components\\SideDrawer\\SideDrawer.js":"13","C:\\Users\\hboja\\Documents\\GitHub\\trello\\trello\\src\\utilis\\imageApi.js":"14","C:\\Users\\hboja\\Documents\\GitHub\\trello\\trello\\src\\components\\List\\List.js":"15","C:\\Users\\hboja\\Documents\\GitHub\\trello\\trello\\src\\components\\TopBar\\TopBar.js":"16","C:\\Users\\hboja\\Documents\\GitHub\\trello\\trello\\src\\utilis\\storeApi.js":"17","C:\\Users\\hboja\\Documents\\GitHub\\trello\\trello\\src\\utilis\\colors.js":"18","C:\\Users\\hboja\\Documents\\GitHub\\trello\\trello\\src\\components\\useOutsideClick\\useOutsideClick.js":"19","C:\\Users\\hboja\\Documents\\GitHub\\trello\\trello\\src\\components\\SideDrawer\\Colors\\Colors.js":"20","C:\\Users\\hboja\\Documents\\GitHub\\trello\\trello\\src\\config\\config.js":"21","C:\\Users\\hboja\\Documents\\GitHub\\trello\\trello\\src\\components\\ReusableInputContainer\\InputArea.js":"22","C:\\Users\\hboja\\Documents\\GitHub\\trello\\trello\\src\\components\\Card\\ModalCard\\ModalCard.js":"23","C:\\Users\\hboja\\Documents\\GitHub\\trello\\trello\\src\\components\\Card\\Comments\\Comment\\Comment.js":"24","C:\\Users\\hboja\\Documents\\GitHub\\trello\\trello\\src\\components\\Card\\Comments\\Comments.js":"25","C:\\Users\\hboja\\Documents\\GitHub\\trello\\trello\\src\\components\\Card\\Comments\\Comment\\FormComment\\FormComment.js":"26"},{"size":519,"mtime":1688390488965,"results":"27","hashOfConfig":"28"},{"size":3404,"mtime":1688390488890,"results":"29","hashOfConfig":"28"},{"size":2572,"mtime":1688390488894,"results":"30","hashOfConfig":"28"},{"size":3530,"mtime":1688390488916,"results":"31","hashOfConfig":"28"},{"size":703,"mtime":1688390488892,"results":"32","hashOfConfig":"28"},{"size":1331,"mtime":1688390488918,"results":"33","hashOfConfig":"28"},{"size":956,"mtime":1688390488936,"results":"34","hashOfConfig":"28"},{"size":1341,"mtime":1688390488931,"results":"35","hashOfConfig":"28"},{"size":3270,"mtime":1688392041329,"results":"36","hashOfConfig":"28"},{"size":580,"mtime":1688390488908,"results":"37","hashOfConfig":"28"},{"size":1320,"mtime":1688390488910,"results":"38","hashOfConfig":"28"},{"size":515,"mtime":1688390488921,"results":"39","hashOfConfig":"28"},{"size":2846,"mtime":1688390488936,"results":"40","hashOfConfig":"28"},{"size":632,"mtime":1688390488969,"results":"41","hashOfConfig":"28"},{"size":2360,"mtime":1688392041212,"results":"42","hashOfConfig":"28"},{"size":2042,"mtime":1688390488959,"results":"43","hashOfConfig":"28"},{"size":71,"mtime":1688390488970,"results":"44","hashOfConfig":"28"},{"size":211,"mtime":1688390488968,"results":"45","hashOfConfig":"28"},{"size":540,"mtime":1688390488962,"results":"46","hashOfConfig":"28"},{"size":918,"mtime":1688390488934,"results":"47","hashOfConfig":"28"},{"size":180,"mtime":1688390488963,"results":"48","hashOfConfig":"28"},{"size":1969,"mtime":1688390488930,"results":"49","hashOfConfig":"28"},{"size":1679,"mtime":1688390488913,"results":"50","hashOfConfig":"28"},{"size":1819,"mtime":1688390488900,"results":"51","hashOfConfig":"28"},{"size":1358,"mtime":1688392628554,"results":"52","hashOfConfig":"28"},{"size":1953,"mtime":1688390488903,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"1l4eb8c",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"56"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"56"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"56"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\hboja\\Documents\\GitHub\\trello\\trello\\src\\index.js",[],["110","111"],"C:\\Users\\hboja\\Documents\\GitHub\\trello\\trello\\src\\api\\TrelloApi.js",[],"C:\\Users\\hboja\\Documents\\GitHub\\trello\\trello\\src\\components\\BoardPage\\BoardPage.js",["112"],"import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Board from \"../Board/Board\";\r\nimport StoreApi from \"../../utilis/storeApi\";\r\nimport TrelloApi from \"../../api/TrelloApi\";\r\n\r\nfunction BoardPage() {\r\n  const [lists, setLists] = useState([]);\r\n  const [cards, setCards] = useState([]);\r\n  const[comments,setComments]=useState([])\r\n\r\n  // board id\r\n  let { id } = useParams();\r\n  useEffect(() => {\r\n    fetchLists();\r\n    fetchCards();\r\n  }, [id,comments]);\r\n\r\n  const fetchLists = () => {\r\n    TrelloApi.fetchLists(id).then((data) => {\r\n      setLists(data);\r\n    });\r\n  };\r\n  const fetchCards = () => {\r\n    TrelloApi.fetchCards(id).then((data) => {\r\n      setCards(data);\r\n    \r\n    });\r\n  };\r\n\r\n  const addList = (value) => {\r\n    TrelloApi.addList(id, value).then(() =>\r\n     fetchLists());\r\n  };\r\n\r\n  const addCards = (value, listId) => {\r\n    TrelloApi.addCards(value, listId).then(() => {\r\n      fetchCards();\r\n    });\r\n  };\r\n\r\n  const updateListName = (listName, listId) => {\r\n    TrelloApi.updateListName(listName, listId).then(() => {\r\n      fetchLists();\r\n    });\r\n  };\r\n\r\n  const updateCards = (cardId,cardContent) => {\r\n    TrelloApi.updateCards(cardId,cardContent).then(() => {\r\n      fetchCards();\r\n    });\r\n  };\r\n  const deleteCard = (cardId) => {\r\n    TrelloApi.deleteCard(cardId).then(() => {\r\n      fetchCards();\r\n    });\r\n  };\r\n  const addComment = (cardId,text) => {\r\n    TrelloApi.addComment(cardId,text).then(() => {\r\n    });\r\n    getComment(cardId)\r\n  };\r\n  const getComment = (cardId) => {\r\n    TrelloApi.getComment(cardId).then((data) => {\r\n    setComments(data)\r\n    });\r\n  };\r\n  const deleteComment = (cardId,idAction) => {\r\n    TrelloApi.deleteComment(cardId,idAction).then(() => {\r\n     getComment(cardId)\r\n     fetchCards()\r\n    });\r\n  };\r\n  const updateComment = (cardId,idAction,text) => {\r\n    TrelloApi.updateComment(cardId,idAction,text).then(() => {\r\n     getComment(cardId)\r\n\r\n    });\r\n  };\r\n  const archiveList = (idList) => {\r\n    TrelloApi.archiveList(idList).then(() => {\r\n    });\r\n    fetchLists()\r\n  };\r\n\r\n  return (\r\n    <StoreApi.Provider\r\n      value={{\r\n        addList,\r\n        fetchLists,\r\n        addCards,\r\n        fetchCards,\r\n        updateListName,\r\n        updateCards,\r\n        deleteCard,\r\n        addComment,\r\n        getComment,\r\n        comments,\r\n        deleteComment,\r\n        updateComment,\r\n        archiveList,\r\n      \r\n      }}\r\n    >\r\n      <Board lists={lists} cards={cards} />\r\n       </StoreApi.Provider>\r\n  );\r\n}\r\n\r\nexport default BoardPage;\r\n","C:\\Users\\hboja\\Documents\\GitHub\\trello\\trello\\src\\components\\Header\\Header.js",[],"C:\\Users\\hboja\\Documents\\GitHub\\trello\\trello\\src\\components\\Board\\Board.js",[],"C:\\Users\\hboja\\Documents\\GitHub\\trello\\trello\\src\\components\\Header\\Modal\\ModalAddNewBoard.js",[],"C:\\Users\\hboja\\Documents\\GitHub\\trello\\trello\\src\\components\\SideDrawer\\Images\\Images.js",[],"C:\\Users\\hboja\\Documents\\GitHub\\trello\\trello\\src\\components\\ReusableInputContainer\\ReusableInputContainer.js",[],"C:\\Users\\hboja\\Documents\\GitHub\\trello\\trello\\src\\components\\Card\\Card.js",[],"C:\\Users\\hboja\\Documents\\GitHub\\trello\\trello\\src\\components\\Card\\Comments\\HeaderCommentModal\\HeaderCommentModal.js",[],"C:\\Users\\hboja\\Documents\\GitHub\\trello\\trello\\src\\components\\Card\\Comments\\ReusableCommentForm\\ReusableCommentForm.js",[],"C:\\Users\\hboja\\Documents\\GitHub\\trello\\trello\\src\\components\\Home\\Home.js",["113"],"import React from \"react\";\r\nimport style from \"./Home.module.css\";\r\n\r\nfunction Home() {\r\n  return (\r\n    <div className={style.home}>\r\n      <div className={style.homeCard}>\r\n        <img src=\"https://a.trellocdn.com/prgb/dist/images/home/orientation/no-content.e25c676458c1f4cb280b.svg\" />\r\n        <h5 className=\"mt-2\">Wellcome to my trello app </h5>\r\n        <p>\r\n          \r\n          We will show the most important activity here.{\" \"}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","C:\\Users\\hboja\\Documents\\GitHub\\trello\\trello\\src\\components\\SideDrawer\\SideDrawer.js",[],"C:\\Users\\hboja\\Documents\\GitHub\\trello\\trello\\src\\utilis\\imageApi.js",[],"C:\\Users\\hboja\\Documents\\GitHub\\trello\\trello\\src\\components\\List\\List.js",[],"C:\\Users\\hboja\\Documents\\GitHub\\trello\\trello\\src\\components\\TopBar\\TopBar.js",[],"C:\\Users\\hboja\\Documents\\GitHub\\trello\\trello\\src\\utilis\\storeApi.js",[],"C:\\Users\\hboja\\Documents\\GitHub\\trello\\trello\\src\\utilis\\colors.js",[],"C:\\Users\\hboja\\Documents\\GitHub\\trello\\trello\\src\\components\\useOutsideClick\\useOutsideClick.js",[],"C:\\Users\\hboja\\Documents\\GitHub\\trello\\trello\\src\\components\\SideDrawer\\Colors\\Colors.js",[],"C:\\Users\\hboja\\Documents\\GitHub\\trello\\trello\\src\\config\\config.js",[],"C:\\Users\\hboja\\Documents\\GitHub\\trello\\trello\\src\\components\\ReusableInputContainer\\InputArea.js",[],"C:\\Users\\hboja\\Documents\\GitHub\\trello\\trello\\src\\components\\Card\\ModalCard\\ModalCard.js",[],"C:\\Users\\hboja\\Documents\\GitHub\\trello\\trello\\src\\components\\Card\\Comments\\Comment\\Comment.js",["114","115"],"import React, { useEffect, useState, useContext } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport moment from \"moment\";\r\nimport style from \"./Comment.module.css\";\r\nimport storeApi from '../../../../utilis/storeApi'\r\nimport ReusableCommentForm from \"../ReusableCommentForm/ReusableCommentForm\";\r\n\r\nfunction Comment({ com }) {\r\n  const [date, setDate] = useState(\"\");\r\n  const [showEditForm, setEditForm] = useState(false);\r\n\r\n  const { deleteComment, updateComment } = useContext(storeApi);\r\n  const dateTimeAgo = () => {\r\n    var date = moment(com.date);\r\n    setDate(moment(date).fromNow());\r\n  };\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      dateTimeAgo();\r\n    }, 1000);\r\n    return () => {\r\n      clearInterval(interval);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <img\r\n          src={`${com.memberCreator.avatarUrl}/30.png`}\r\n          className={style.avatar}\r\n        />\r\n        <span className={style.userName}>{com.memberCreator.username}</span>\r\n        <span className={style.date}>{date}</span>\r\n      </div>\r\n\r\n      {showEditForm ? (\r\n        <ReusableCommentForm\r\n          com={com}\r\n          showEditForm={showEditForm}\r\n          setEditForm={setEditForm}\r\n          updateComment={updateComment}\r\n        />\r\n      ) : (\r\n        <div className={style.text}>\r\n          <p>{com.data.text}</p>\r\n        </div>\r\n      )}\r\n      <div className={style.buttons}>\r\n        <span className={style.edit} onClick={() => setEditForm(true)}>\r\n          Edit\r\n        </span>\r\n        <span\r\n          className={style.delete}\r\n          onClick={() => deleteComment(com.data.card.id, com.id)}\r\n        >\r\n          Delete\r\n        </span>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nComment.propTypes = {\r\n  com: PropTypes.object,\r\n};\r\nexport default Comment;\r\n","C:\\Users\\hboja\\Documents\\GitHub\\trello\\trello\\src\\components\\Card\\Comments\\Comments.js",[],"C:\\Users\\hboja\\Documents\\GitHub\\trello\\trello\\src\\components\\Card\\Comments\\Comment\\FormComment\\FormComment.js",[],{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","severity":1,"message":"121","line":17,"column":6,"nodeType":"122","endLine":17,"endColumn":19,"suggestions":"123"},{"ruleId":"124","severity":1,"message":"125","line":8,"column":9,"nodeType":"126","endLine":8,"endColumn":116},{"ruleId":"120","severity":1,"message":"127","line":25,"column":6,"nodeType":"122","endLine":25,"endColumn":8,"suggestions":"128"},{"ruleId":"124","severity":1,"message":"125","line":30,"column":9,"nodeType":"126","endLine":33,"endColumn":11},"no-native-reassign",["129"],"no-negated-in-lhs",["130"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchCards' and 'fetchLists'. Either include them or remove the dependency array.","ArrayExpression",["131"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'dateTimeAgo'. Either include it or remove the dependency array.",["132"],"no-global-assign","no-unsafe-negation",{"desc":"133","fix":"134"},{"desc":"135","fix":"136"},"Update the dependencies array to be: [id, comments, fetchLists, fetchCards]",{"range":"137","text":"138"},"Update the dependencies array to be: [dateTimeAgo]",{"range":"139","text":"140"},[496,509],"[id, comments, fetchLists, fetchCards]",[778,780],"[dateTimeAgo]"]