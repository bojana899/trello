[{"C:\\Users\\hboja\\Documents\\GitHub\\trello\\trello\\src\\index.js":"1","C:\\Users\\hboja\\Documents\\GitHub\\trello\\trello\\src\\api\\TrelloApi.js":"2","C:\\Users\\hboja\\Documents\\GitHub\\trello\\trello\\src\\components\\BoardPage\\BoardPage.js":"3","C:\\Users\\hboja\\Documents\\GitHub\\trello\\trello\\src\\components\\Header\\Header.js":"4","C:\\Users\\hboja\\Documents\\GitHub\\trello\\trello\\src\\components\\Board\\Board.js":"5","C:\\Users\\hboja\\Documents\\GitHub\\trello\\trello\\src\\components\\Header\\Modal\\ModalAddNewBoard.js":"6","C:\\Users\\hboja\\Documents\\GitHub\\trello\\trello\\src\\components\\SideDrawer\\Images\\Images.js":"7","C:\\Users\\hboja\\Documents\\GitHub\\trello\\trello\\src\\components\\ReusableInputContainer\\ReusableInputContainer.js":"8","C:\\Users\\hboja\\Documents\\GitHub\\trello\\trello\\src\\components\\Card\\Card.js":"9","C:\\Users\\hboja\\Documents\\GitHub\\trello\\trello\\src\\components\\Card\\Comments\\HeaderCommentModal\\HeaderCommentModal.js":"10","C:\\Users\\hboja\\Documents\\GitHub\\trello\\trello\\src\\components\\Card\\Comments\\ReusableCommentForm\\ReusableCommentForm.js":"11","C:\\Users\\hboja\\Documents\\GitHub\\trello\\trello\\src\\components\\Home\\Home.js":"12","C:\\Users\\hboja\\Documents\\GitHub\\trello\\trello\\src\\components\\SideDrawer\\SideDrawer.js":"13","C:\\Users\\hboja\\Documents\\GitHub\\trello\\trello\\src\\utilis\\imageApi.js":"14","C:\\Users\\hboja\\Documents\\GitHub\\trello\\trello\\src\\components\\List\\List.js":"15","C:\\Users\\hboja\\Documents\\GitHub\\trello\\trello\\src\\components\\TopBar\\TopBar.js":"16","C:\\Users\\hboja\\Documents\\GitHub\\trello\\trello\\src\\utilis\\storeApi.js":"17","C:\\Users\\hboja\\Documents\\GitHub\\trello\\trello\\src\\utilis\\colors.js":"18","C:\\Users\\hboja\\Documents\\GitHub\\trello\\trello\\src\\components\\useOutsideClick\\useOutsideClick.js":"19","C:\\Users\\hboja\\Documents\\GitHub\\trello\\trello\\src\\components\\SideDrawer\\Colors\\Colors.js":"20","C:\\Users\\hboja\\Documents\\GitHub\\trello\\trello\\src\\config\\config.js":"21","C:\\Users\\hboja\\Documents\\GitHub\\trello\\trello\\src\\components\\ReusableInputContainer\\InputArea.js":"22","C:\\Users\\hboja\\Documents\\GitHub\\trello\\trello\\src\\components\\Card\\ModalCard\\ModalCard.js":"23"},{"size":519,"mtime":1688390488965,"results":"24","hashOfConfig":"25"},{"size":3404,"mtime":1688390488890,"results":"26","hashOfConfig":"25"},{"size":2572,"mtime":1688390488894,"results":"27","hashOfConfig":"25"},{"size":3530,"mtime":1688390488916,"results":"28","hashOfConfig":"25"},{"size":703,"mtime":1688390488892,"results":"29","hashOfConfig":"25"},{"size":1331,"mtime":1688390488918,"results":"30","hashOfConfig":"25"},{"size":956,"mtime":1688390488936,"results":"31","hashOfConfig":"25"},{"size":1341,"mtime":1688390488931,"results":"32","hashOfConfig":"25"},{"size":3270,"mtime":1688392041329,"results":"33","hashOfConfig":"25"},{"size":580,"mtime":1688390488908,"results":"34","hashOfConfig":"25"},{"size":1320,"mtime":1688390488910,"results":"35","hashOfConfig":"25"},{"size":515,"mtime":1688390488921,"results":"36","hashOfConfig":"25"},{"size":2846,"mtime":1688390488936,"results":"37","hashOfConfig":"25"},{"size":632,"mtime":1688390488969,"results":"38","hashOfConfig":"25"},{"size":2331,"mtime":1688390488924,"results":"39","hashOfConfig":"25"},{"size":2042,"mtime":1688390488959,"results":"40","hashOfConfig":"25"},{"size":71,"mtime":1688390488970,"results":"41","hashOfConfig":"25"},{"size":211,"mtime":1688390488968,"results":"42","hashOfConfig":"25"},{"size":540,"mtime":1688390488962,"results":"43","hashOfConfig":"25"},{"size":918,"mtime":1688390488934,"results":"44","hashOfConfig":"25"},{"size":180,"mtime":1688390488963,"results":"45","hashOfConfig":"25"},{"size":1969,"mtime":1688390488930,"results":"46","hashOfConfig":"25"},{"size":1679,"mtime":1688390488913,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1l4eb8c",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"50"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"50"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":1,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\hboja\\Documents\\GitHub\\trello\\trello\\src\\index.js",[],["98","99"],"C:\\Users\\hboja\\Documents\\GitHub\\trello\\trello\\src\\api\\TrelloApi.js",[],"C:\\Users\\hboja\\Documents\\GitHub\\trello\\trello\\src\\components\\BoardPage\\BoardPage.js",["100"],"import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Board from \"../Board/Board\";\r\nimport StoreApi from \"../../utilis/storeApi\";\r\nimport TrelloApi from \"../../api/TrelloApi\";\r\n\r\nfunction BoardPage() {\r\n  const [lists, setLists] = useState([]);\r\n  const [cards, setCards] = useState([]);\r\n  const[comments,setComments]=useState([])\r\n\r\n  // board id\r\n  let { id } = useParams();\r\n  useEffect(() => {\r\n    fetchLists();\r\n    fetchCards();\r\n  }, [id,comments]);\r\n\r\n  const fetchLists = () => {\r\n    TrelloApi.fetchLists(id).then((data) => {\r\n      setLists(data);\r\n    });\r\n  };\r\n  const fetchCards = () => {\r\n    TrelloApi.fetchCards(id).then((data) => {\r\n      setCards(data);\r\n    \r\n    });\r\n  };\r\n\r\n  const addList = (value) => {\r\n    TrelloApi.addList(id, value).then(() =>\r\n     fetchLists());\r\n  };\r\n\r\n  const addCards = (value, listId) => {\r\n    TrelloApi.addCards(value, listId).then(() => {\r\n      fetchCards();\r\n    });\r\n  };\r\n\r\n  const updateListName = (listName, listId) => {\r\n    TrelloApi.updateListName(listName, listId).then(() => {\r\n      fetchLists();\r\n    });\r\n  };\r\n\r\n  const updateCards = (cardId,cardContent) => {\r\n    TrelloApi.updateCards(cardId,cardContent).then(() => {\r\n      fetchCards();\r\n    });\r\n  };\r\n  const deleteCard = (cardId) => {\r\n    TrelloApi.deleteCard(cardId).then(() => {\r\n      fetchCards();\r\n    });\r\n  };\r\n  const addComment = (cardId,text) => {\r\n    TrelloApi.addComment(cardId,text).then(() => {\r\n    });\r\n    getComment(cardId)\r\n  };\r\n  const getComment = (cardId) => {\r\n    TrelloApi.getComment(cardId).then((data) => {\r\n    setComments(data)\r\n    });\r\n  };\r\n  const deleteComment = (cardId,idAction) => {\r\n    TrelloApi.deleteComment(cardId,idAction).then(() => {\r\n     getComment(cardId)\r\n     fetchCards()\r\n    });\r\n  };\r\n  const updateComment = (cardId,idAction,text) => {\r\n    TrelloApi.updateComment(cardId,idAction,text).then(() => {\r\n     getComment(cardId)\r\n\r\n    });\r\n  };\r\n  const archiveList = (idList) => {\r\n    TrelloApi.archiveList(idList).then(() => {\r\n    });\r\n    fetchLists()\r\n  };\r\n\r\n  return (\r\n    <StoreApi.Provider\r\n      value={{\r\n        addList,\r\n        fetchLists,\r\n        addCards,\r\n        fetchCards,\r\n        updateListName,\r\n        updateCards,\r\n        deleteCard,\r\n        addComment,\r\n        getComment,\r\n        comments,\r\n        deleteComment,\r\n        updateComment,\r\n        archiveList,\r\n      \r\n      }}\r\n    >\r\n      <Board lists={lists} cards={cards} />\r\n       </StoreApi.Provider>\r\n  );\r\n}\r\n\r\nexport default BoardPage;\r\n","C:\\Users\\hboja\\Documents\\GitHub\\trello\\trello\\src\\components\\Header\\Header.js",[],"C:\\Users\\hboja\\Documents\\GitHub\\trello\\trello\\src\\components\\Board\\Board.js",[],"C:\\Users\\hboja\\Documents\\GitHub\\trello\\trello\\src\\components\\Header\\Modal\\ModalAddNewBoard.js",[],"C:\\Users\\hboja\\Documents\\GitHub\\trello\\trello\\src\\components\\SideDrawer\\Images\\Images.js",[],"C:\\Users\\hboja\\Documents\\GitHub\\trello\\trello\\src\\components\\ReusableInputContainer\\ReusableInputContainer.js",[],"C:\\Users\\hboja\\Documents\\GitHub\\trello\\trello\\src\\components\\Card\\Card.js",[],"C:\\Users\\hboja\\Documents\\GitHub\\trello\\trello\\src\\components\\Card\\Comments\\HeaderCommentModal\\HeaderCommentModal.js",[],"C:\\Users\\hboja\\Documents\\GitHub\\trello\\trello\\src\\components\\Card\\Comments\\ReusableCommentForm\\ReusableCommentForm.js",[],"C:\\Users\\hboja\\Documents\\GitHub\\trello\\trello\\src\\components\\Home\\Home.js",["101"],"import React from \"react\";\r\nimport style from \"./Home.module.css\";\r\n\r\nfunction Home() {\r\n  return (\r\n    <div className={style.home}>\r\n      <div className={style.homeCard}>\r\n        <img src=\"https://a.trellocdn.com/prgb/dist/images/home/orientation/no-content.e25c676458c1f4cb280b.svg\" />\r\n        <h5 className=\"mt-2\">Wellcome to my trello app </h5>\r\n        <p>\r\n          \r\n          We will show the most important activity here.{\" \"}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","C:\\Users\\hboja\\Documents\\GitHub\\trello\\trello\\src\\components\\SideDrawer\\SideDrawer.js",[],"C:\\Users\\hboja\\Documents\\GitHub\\trello\\trello\\src\\utilis\\imageApi.js",[],"C:\\Users\\hboja\\Documents\\GitHub\\trello\\trello\\src\\components\\List\\List.js",["102","103","104"],"import React, { useState, useContext } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { faEllipsisH } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport Card from \"../Card/Card\";\r\nimport ReusableInputComponent from \"../ReusableInputContainer/ReusableInputContainer\";\r\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\r\nimport style from \"./List.module.css\";\r\nimport storeApi from \"../../utilis/storeApi\";\r\nimport Popover from \"react-bootstrap/Popover\";\r\n\r\nfunction List({ list,cards }) {\r\n  const title = list.name;\r\n  const listId = list.id;\r\n  const [listName, setListName] = useState(title);\r\n  const [open, setOpen] = useState(false);\r\n  const { updateListName,archiveList} = useContext(storeApi);\r\n\r\n  const getName = (e) => {\r\n    setListName(e.target.value);\r\n  };\r\n\r\n  const handleOnBlur = (event) => {\r\n    event.preventDefault()\r\n    updateListName(listName, listId);\r\n    setOpen(false);\r\n  };\r\n\r\n  const filterCards = cards.filter((card) => card.idList == listId);\r\n\r\n  const popover = (\r\n    <Popover>\r\n      <Popover.Title as=\"h5\">List Actions</Popover.Title>\r\n      <Popover.Content>\r\n        <strong onClick={(e)=>{e.preventDefault(),archiveList(listId)}} style={{cursor:\"pointer\"}}>Archive List</strong>\r\n      </Popover.Content>\r\n    </Popover>\r\n  );\r\n  return (\r\n    <div className={style.list} onBlur={handleOnBlur}>\r\n      <div className={\"card-header \" + style.listTitle}>\r\n        {open ? (\r\n          <span>\r\n            <input\r\n              type=\"text\"\r\n              value={listName}\r\n              onChange={getName}\r\n              className={style.inputTitle}\r\n            />\r\n          </span>\r\n        ) : (\r\n          <span onClick={() => setOpen(true)}>{listName}</span>\r\n        )}\r\n\r\n        <OverlayTrigger trigger=\"click\" placement=\"right\" overlay={popover}>\r\n          <FontAwesomeIcon icon={faEllipsisH} className={style.more} />\r\n        </OverlayTrigger>\r\n      </div>\r\n      {filterCards\r\n        ? filterCards.map((card) => {\r\n            return <Card card={card} key={card.id} />;\r\n          })\r\n        : null}\r\n      <ReusableInputComponent type=\"card\" listId={listId} />\r\n    </div>\r\n  );\r\n}\r\n\r\nList.propTypes = {\r\n  list: PropTypes.object,\r\n  cards: PropTypes.array,\r\n};\r\nexport default List;\r\n","C:\\Users\\hboja\\Documents\\GitHub\\trello\\trello\\src\\components\\TopBar\\TopBar.js",[],"C:\\Users\\hboja\\Documents\\GitHub\\trello\\trello\\src\\utilis\\storeApi.js",[],"C:\\Users\\hboja\\Documents\\GitHub\\trello\\trello\\src\\utilis\\colors.js",[],"C:\\Users\\hboja\\Documents\\GitHub\\trello\\trello\\src\\components\\useOutsideClick\\useOutsideClick.js",[],"C:\\Users\\hboja\\Documents\\GitHub\\trello\\trello\\src\\components\\SideDrawer\\Colors\\Colors.js",[],"C:\\Users\\hboja\\Documents\\GitHub\\trello\\trello\\src\\config\\config.js",[],"C:\\Users\\hboja\\Documents\\GitHub\\trello\\trello\\src\\components\\ReusableInputContainer\\InputArea.js",[],"C:\\Users\\hboja\\Documents\\GitHub\\trello\\trello\\src\\components\\Card\\ModalCard\\ModalCard.js",[],{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":17,"column":6,"nodeType":"111","endLine":17,"endColumn":19,"suggestions":"112"},{"ruleId":"113","severity":1,"message":"114","line":8,"column":9,"nodeType":"115","endLine":8,"endColumn":116},{"ruleId":"116","severity":1,"message":"117","line":29,"column":58,"nodeType":"118","messageId":"119","endLine":29,"endColumn":60},{"ruleId":"120","severity":2,"message":"121","line":35,"column":32,"nodeType":"122","messageId":"123","endLine":35,"endColumn":70},{"ruleId":"124","severity":1,"message":"125","line":35,"column":50,"nodeType":"126","messageId":"127","endLine":35,"endColumn":51},"no-native-reassign",["128"],"no-negated-in-lhs",["129"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchCards' and 'fetchLists'. Either include them or remove the dependency array.","ArrayExpression",["130"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-expressions","Expected an assignment or function call and instead saw an expression.","ExpressionStatement","unusedExpression","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","no-global-assign","no-unsafe-negation",{"desc":"131","fix":"132"},"Update the dependencies array to be: [id, comments, fetchLists, fetchCards]",{"range":"133","text":"134"},[496,509],"[id, comments, fetchLists, fetchCards]"]